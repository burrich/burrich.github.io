{"version":3,"sources":["main.js"],"names":["window","NodeList","prototype","forEach","callback","thisArg","length","i","this","addEventListener","body","document","scrollHeight","clientHeight","articles","querySelector","articlesTop","Math","floor","getBoundingClientRect","top","scrollY","aboutTop","about","menuItems","menuActiveIndex","checkHashSections","scrollTopMax","section","updateMenu","index","classList","remove","add"],"mappings":"aAKIA,OAAOC,WAAaA,SAASC,UAAUC,UACzCF,SAASC,UAAUC,QAAU,SAAUC,EAAUC,GAD/CL,EAAOC,GAAaA,OACtBA,IAASC,IAAAA,EAAAA,EAAUC,EAAAA,KAAUG,OAAAC,IACzBF,EAAUA,KAAAA,EAAVG,KAAAD,GAAAA,EAAAC,QAcNR,OAAOS,iBAAiB,OAAQ,WAC9B,IAAMC,EAAeC,SAASD,KADzBD,EAAPC,EAAwBE,aAAQF,EAAMG,aAKpCC,EAAAH,SAAAI,cAAA,aAGMC,EAAeC,KAAKC,MAAMJ,EAASK,wBAAwBC,IAAMpB,OAAOqB,SAAxEL,EAAeC,SAAWH,cAASK,UAGnCG,EAAeL,KAAKC,MAAMK,EAAMJ,wBAAwBC,IAAMpB,OAAOqB,SAArEC,EAAeL,SAAWM,iBAAMJ,mBAEhCK,EAAAA,GAGFC,GAAmB,EAQvB,SAASC,IACH1B,OAAOqB,SAAWC,GAAYtB,OAAOqB,UAAYM,EAAjD,UAAA3B,IACA4B,EAAA,QACIA,EAAAA,IAEFC,OAAAR,SAAAL,EAEYK,aANlBO,IAOEA,EAAA,WACAC,EAAID,IAIC,SANAA,IAOJA,EAAA,OACDC,EAAID,IAUR,SAASC,EAAWC,IACO,IAArBL,GADND,EAASK,GAAkBE,UAAAC,OAAA,UAIzBP,EAFED,EAAUC,GAEZA,UAAAQ,IAAA,UArCFP,IAGA1B,OAAOS,iBAAiB,SAAUiB","file":"../main.js","sourcesContent":["/**\r\n * NodeList forEach polyfill for ie.\r\n * see https://developer.mozilla.org/en-US/docs/Web/API/NodeList/forEach#Polyfill\r\n * TODO: remove this when core-js v3 (babel dependencie) will be available\r\n */\r\nif (window.NodeList && !NodeList.prototype.forEach) {\r\n  NodeList.prototype.forEach = function (callback, thisArg) {\r\n      thisArg = thisArg || window;\r\n      for (var i = 0; i < this.length; i++) {\r\n          callback.call(thisArg, this[i], i, this);\r\n      }\r\n  };\r\n}\r\n\r\n/**\r\n * Wait for ressources loading and :\r\n * - update active menu item after checking the current hash section\r\n * - listen for updates on scroll\r\n * \r\n * nb : images must be loaded (load event) to manage scroll events/properties.\r\n */\r\nwindow.addEventListener('load', () => {\r\n  const body         = document.body;\r\n  const scrollTopMax = body.scrollHeight - body.clientHeight;\r\n  \r\n  // Article and about sections top values are rounded (Math.floor) \r\n  // in order to match window.scrollY (integer).\r\n\r\n  const articles     = document.querySelector('#articles');\r\n  const articlesTop  = Math.floor(articles.getBoundingClientRect().top + window.scrollY);\r\n  \r\n  const about        = document.querySelector('#about');\r\n  const aboutTop     = Math.floor(about.getBoundingClientRect().top + window.scrollY);\r\n  \r\n  const menuItems = document.querySelectorAll('.menu-list-item');\r\n\r\n  let section = ''; \r\n  let menuActiveIndex = -1;\r\n\r\n  checkHashSections();\r\n  window.addEventListener('scroll', checkHashSections);\r\n  \r\n  /**\r\n   * Check current hash section and update menu active item if necessary.\r\n   */\r\n  function checkHashSections() {\r\n    if (window.scrollY >= aboutTop || window.scrollY === scrollTopMax) { \r\n        // about section\r\n        if (section !== 'about') {\r\n          section = 'about';\r\n          updateMenu(2);\r\n        }\r\n    } else if (window.scrollY >= articlesTop) { \r\n      // articles section\r\n      if (section !== 'articles') {\r\n        section = 'articles';\r\n        updateMenu(1);\r\n      }\r\n    } else {\r\n       // home section\r\n      if (section !== 'home') {\r\n        section = 'home';\r\n        updateMenu(0);\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Remove current active menu item class and add new.\r\n   */\r\n  function updateMenu(index) {\r\n    if (menuActiveIndex !== -1) {\r\n      menuItems[menuActiveIndex].classList.remove('active');\r\n    }\r\n    menuActiveIndex = index;\r\n  \r\n    menuItems[index].classList.add('active');\r\n  }\r\n});\r\n"]}